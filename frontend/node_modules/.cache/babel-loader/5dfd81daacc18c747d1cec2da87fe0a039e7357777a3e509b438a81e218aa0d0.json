{"ast":null,"code":"var _jsxFileName = \"/Users/synamalhan/Desktop/CIC/boys-town/frontend/src/components/dashboard/DashboardContainer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './DashboardContainer.css';\nimport AgentCard from '../AgentCard';\nimport AgentDetails from '../AgentDetails';\nimport { agentService } from '../../services/agentService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imgEllipse1 = \"http://localhost:3845/assets/dcc912ce11c40eac810e7d22fb275abb31670d4b.svg\";\nconst imgEllipse2 = \"http://localhost:3845/assets/94538a1e7a646e4519925df62f18476b373c5bee.svg\";\nconst imgEllipse3 = \"http://localhost:3845/assets/721109041c9a688b03535beb6d7d05ad3685a5fa.svg\";\nconst imgDropdownArrow = \"http://localhost:3845/assets/5356d5889cbe72300bc2c08be7daa8190ccab606.svg\";\nconst imgWestArrow = \"http://localhost:3845/assets/dab477c6ade2d19b6d463e2d6994e32669d7440c.svg\";\nconst imgWestIcon = \"http://localhost:3845/assets/9fc49a8ad4582ec588abb9db25500f5811dbc74c.svg\";\nconst imgCall = \"http://localhost:3845/assets/ef6e5e33bf0c7a55016af261878a9906b26dd5b9.svg\";\nconst imgCallIcon = \"http://localhost:3845/assets/20f6037d1e0458230bce762850b2ffc99fe936cb.svg\";\nconst imgLine = \"http://localhost:3845/assets/3873aadcd49ad269806198541057edcaf8fbb825.svg\";\nconst imgLine10 = \"http://localhost:3845/assets/617d77add44dc3b59a619850aa9fc52a5d3b4974.svg\";\nconst imgLine14 = \"http://localhost:3845/assets/9082e57296c9ee82cca1c2ee794dfcdd9f9129df.svg\";\nconst imgPerson = \"http://localhost:3845/assets/627d492e7c95cfbccc4574266f4dce2d0ee267c5.svg\";\nfunction DashboardContainer() {\n  _s();\n  const [selectedFilter, setSelectedFilter] = useState('All');\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [agents, setAgents] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch agents data when component mounts\n  useEffect(() => {\n    const fetchAgents = async () => {\n      setLoading(true);\n      try {\n        const agentsData = await agentService.getAllAgents();\n\n        // Assign avatars to agents\n        const avatars = [imgEllipse1, imgEllipse2, imgEllipse3];\n        const agentsWithAvatars = agentsData.map((agent, index) => ({\n          ...agent,\n          avatar: avatars[index % avatars.length]\n        }));\n        setAgents(agentsWithAvatars);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAgents();\n  }, []);\n\n  // Get unique programs for filter dropdown\n  const programs = ['All', 'National Hotline Program', 'Nebraska Crisis Program'];\n  const filteredAgents = selectedFilter === 'All' ? agents : agents.filter(agent => agent.program === selectedFilter);\n  const handleAgentClick = async agent => {\n    // Get detailed agent data including evaluations\n    const detailedAgent = await agentService.getAgentById(agent.contactId);\n    setSelectedAgent({\n      ...agent,\n      evaluations: (detailedAgent === null || detailedAgent === void 0 ? void 0 : detailedAgent.evaluations) || []\n    });\n  };\n  const handleBackClick = () => {\n    setSelectedAgent(null);\n  };\n  const handleFilterSelect = filter => {\n    setSelectedFilter(filter);\n    setIsDropdownOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: selectedAgent ? /*#__PURE__*/_jsxDEV(AgentDetails, {\n      agent: selectedAgent,\n      onBack: handleBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-btn\",\n          onClick: () => setIsDropdownOpen(!isDropdownOpen),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"FILTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgDropdownArrow,\n            alt: \"\",\n            className: \"dropdown-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: programs.map(program => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dropdown-item ${selectedFilter === program ? 'active' : ''}`,\n            onClick: () => handleFilterSelect(program),\n            children: program\n          }, program, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agents-grid\",\n        children: filteredAgents.map((agent, index) => /*#__PURE__*/_jsxDEV(AgentCard, {\n          agent: agent,\n          onClick: handleAgentClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardContainer, \"XVryQRRXEq6SutEHro4lhShBhrk=\");\n_c = DashboardContainer;\nexport default DashboardContainer;\nvar _c;\n$RefreshReg$(_c, \"DashboardContainer\");","map":{"version":3,"names":["useState","useEffect","AgentCard","AgentDetails","agentService","jsxDEV","_jsxDEV","Fragment","_Fragment","imgEllipse1","imgEllipse2","imgEllipse3","imgDropdownArrow","imgWestArrow","imgWestIcon","imgCall","imgCallIcon","imgLine","imgLine10","imgLine14","imgPerson","DashboardContainer","_s","selectedFilter","setSelectedFilter","isDropdownOpen","setIsDropdownOpen","selectedAgent","setSelectedAgent","agents","setAgents","loading","setLoading","fetchAgents","agentsData","getAllAgents","avatars","agentsWithAvatars","map","agent","index","avatar","length","error","console","programs","filteredAgents","filter","program","handleAgentClick","detailedAgent","getAgentById","contactId","evaluations","handleBackClick","handleFilterSelect","className","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/synamalhan/Desktop/CIC/boys-town/frontend/src/components/dashboard/DashboardContainer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './DashboardContainer.css';\nimport AgentCard from '../AgentCard';\nimport AgentDetails from '../AgentDetails';\nimport { agentService } from '../../services/agentService';\n\nconst imgEllipse1 = \"http://localhost:3845/assets/dcc912ce11c40eac810e7d22fb275abb31670d4b.svg\";\nconst imgEllipse2 = \"http://localhost:3845/assets/94538a1e7a646e4519925df62f18476b373c5bee.svg\";\nconst imgEllipse3 = \"http://localhost:3845/assets/721109041c9a688b03535beb6d7d05ad3685a5fa.svg\";\nconst imgDropdownArrow = \"http://localhost:3845/assets/5356d5889cbe72300bc2c08be7daa8190ccab606.svg\";\nconst imgWestArrow = \"http://localhost:3845/assets/dab477c6ade2d19b6d463e2d6994e32669d7440c.svg\";\nconst imgWestIcon = \"http://localhost:3845/assets/9fc49a8ad4582ec588abb9db25500f5811dbc74c.svg\";\nconst imgCall = \"http://localhost:3845/assets/ef6e5e33bf0c7a55016af261878a9906b26dd5b9.svg\";\nconst imgCallIcon = \"http://localhost:3845/assets/20f6037d1e0458230bce762850b2ffc99fe936cb.svg\";\nconst imgLine = \"http://localhost:3845/assets/3873aadcd49ad269806198541057edcaf8fbb825.svg\";\nconst imgLine10 = \"http://localhost:3845/assets/617d77add44dc3b59a619850aa9fc52a5d3b4974.svg\";\nconst imgLine14 = \"http://localhost:3845/assets/9082e57296c9ee82cca1c2ee794dfcdd9f9129df.svg\";\nconst imgPerson = \"http://localhost:3845/assets/627d492e7c95cfbccc4574266f4dce2d0ee267c5.svg\";\n\nfunction DashboardContainer() {\n  const [selectedFilter, setSelectedFilter] = useState('All');\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [agents, setAgents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  // Fetch agents data when component mounts\n  useEffect(() => {\n    const fetchAgents = async () => {\n      setLoading(true);\n      try {\n        const agentsData = await agentService.getAllAgents();\n        \n        // Assign avatars to agents\n        const avatars = [imgEllipse1, imgEllipse2, imgEllipse3];\n        const agentsWithAvatars = agentsData.map((agent, index) => ({\n          ...agent,\n          avatar: avatars[index % avatars.length]\n        }));\n        \n        setAgents(agentsWithAvatars);\n      } catch (error) {\n        console.error('Error fetching agents:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchAgents();\n  }, []);\n\n  // Get unique programs for filter dropdown\n  const programs = ['All', 'National Hotline Program', 'Nebraska Crisis Program'];\n  \n  const filteredAgents = selectedFilter === 'All' \n    ? agents \n    : agents.filter(agent => agent.program === selectedFilter);\n\n  const handleAgentClick = async (agent) => {\n    // Get detailed agent data including evaluations\n    const detailedAgent = await agentService.getAgentById(agent.contactId);\n    setSelectedAgent({\n      ...agent,\n      evaluations: detailedAgent?.evaluations || []\n    });\n  };\n\n  const handleBackClick = () => {\n    setSelectedAgent(null);\n  };\n\n  const handleFilterSelect = (filter) => {\n    setSelectedFilter(filter);\n    setIsDropdownOpen(false);\n  };\n\n  return (\n    <div className=\"dashboard-page\">\n      {selectedAgent ? (\n        <AgentDetails agent={selectedAgent} onBack={handleBackClick} />\n      ) : (\n        <>\n          <div className=\"filter-dropdown\">\n            <button \n              className=\"filter-btn\" \n              onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n            >\n              <span>FILTER</span>\n              <img src={imgDropdownArrow} alt=\"\" className=\"dropdown-arrow\" />\n            </button>\n            {isDropdownOpen && (\n              <div className=\"dropdown-menu\">\n                {programs.map(program => (\n                  <div\n                    key={program}\n                    className={`dropdown-item ${selectedFilter === program ? 'active' : ''}`}\n                    onClick={() => handleFilterSelect(program)}\n                  >\n                    {program}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"agents-grid\">\n            {filteredAgents.map((agent, index) => (\n              <AgentCard key={index} agent={agent} onClick={handleAgentClick} />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default DashboardContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}